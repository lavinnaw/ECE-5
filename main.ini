#include <Servo.h>
#include <LiquidCrystal.h> 
#include <Stepper.h> 
#define STEPS 200
// define stepper  motor control pins
#define IN1  11
#define IN2  10
#define IN3   9
#define  IN4   8
// Define stepper motor connections and motor interface type. Motor interface type must be set to 1 when using a driver
Stepper stepper(STEPS, IN4, IN2,  IN3, IN1); // initialize stepper library
#define motorInterfaceType 1 //connected to driver module
#define  joystick A0 //joystick output connected to Arduino A0

int Pval = 0;
int potVal = 0;

Servo claw;
const int claw_id = 9;
bool button = true;

const int xAxis_id = A0;
const int yAxis_id = A1;
const int xOffset = 1;
const int yOffset = 2;

int contrast=75;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);  

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  
  //claw
  claw.attach(claw_id);
  claw.write(0);

  //screen
  analogWrite(6,contrast);
  lcd.begin(16, 2);

  // Set the maximum speed in steps per second:
  stepper.setSpeed(1000);
}

void loop() {
  // put your main code here, to run repeatedly:
  
  //claw code:
  if (button == true){
    claw_open();
    delay(1000);
    claw_close();
    delay(1000);
  }

  //joystick code:
  int xAxis = analogRead(xAxis_id);
  int yAxis = analogRead(yAxis_id);
   // Map the analog values to a range of -100 to 100 (optional)
  int mappedXValue = (map(xAxis, 0, 1023, -100 -xOffset, 100 +xOffset)) +xOffset;
  int mappedYValue = (map(yAxis, 0 , 1023, -100 -yOffset, 100 +yOffset))+yOffset;

  int xJoystick = constrain(mappedXValue, -100, 100);
  int yJoystick = constrain(mappedYValue, -100, 100);
    // Display the mapped values in the Serial Monitor
  Serial.print("X-axis: ");
  Serial.print(xJoystick);
  Serial.print("\tY-axis: ");
  Serial.println(yJoystick);
  
  //screen code:

  //delay(20);

  //Joystick & Stepper Motor 
  int val = analogRead(joystick);
  if( (val > -100) && (val < 100) )
34  {
35    digitalWrite(IN1, LOW);
36    digitalWrite(IN2, LOW);
37    digitalWrite(IN3, LOW);
38    digitalWrite(IN4, LOW);
39  }
40
41  else
42  {
43    // move the motor in the first direction
44    while (val >= 100)
45    {
46      // map the speed between 5 and 500 rpm
47      int speed_  = map(val, 523, 1023, 5, 500);
48      // set motor speed
49      stepper.setSpeed(speed_);
50  
51      // move the motor (1 step)
52      stepper.step(1);
53 
54      val  = analogRead(joystick);
55    }
56 
57    // move the motor in the other direction
58    while (val <= -100)
59    {
60      // map the speed between 5 and 500 rpm
61      int speed_ = map(val, 500, 0, 5, 500);
62      // set motor speed
63      stepper.setSpeed(speed_);

        // move the motor (1 step)
66      stepper.step(-1);
67 
68      val  = analogRead(joystick);
      }
  }
}

void claw_close(){
  while (claw.read() != 0){
    claw.write(claw.read()-2);
    delay(15);
  }
}
void claw_open(){
  while (claw.read() != 90){
    claw.write(claw.read()+2);
    delay(15);
  }
}

void pulley_up(){
  pulleyStepper.setSpeed(5);
  pulleyStepper.step(stepsPerRevolution);
  delay(1000); #change when drivers arrive
}

void pulley_down(){
  pulleyStepper.setSpeed(5);
  pulleyStepper.step(-stepsPerRevolution);
  delay(1000);
}
